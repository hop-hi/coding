1.무엇이 필요한지 잘 모를때...
 - "서로 무엇을 해야 할 지 모르는 상태"
 - IT 분야와 역할 그리고 핵심 역량과 핵심 업무들이 무엇인지 설명
   * UML / 분석 / 설계 / Agile / Scrum / 문제 해결 / 접근법 / 개발 방법론 
   * 모듈화 / 책 추천(클린코드...) / 코딩 테스트....

2. 일단 무엇이든 시작해 보기...
 - "시작이 달라도 목적지는 같을 거라 예상, 시간이 걸려도...."
 - "방법이 다를 뿐, 결국 필요한 지식/경험을 찾아 가게 될 거라는 예측"
 - 무엇이든 범위를 가리지 않고 소개 해 보기 : 특히 "기본" 과 "트랜드"
   * 근본적인 "문제 해결의 이유와 왜 서비스를 개발하고 기술을 적용하는지" 질문
   * 그래서 무엇을 알아야 하는가? -> 여기서 다루는 지식들을 소개해 주고자 함
   * Java 코딩 (객체/인터페이스 등....)
   * Java 웹 개발(Servlet...)
   * Java (File I/O , Newtork, NIO, Concurrent Programming)
   * Java(Lambda)
   * Java(RMI , Spring Boot , Spring F/W)
   * Java Spring(Boot,Controller,Service,Repository,Config)
   * Java Multi Thread
   * Build Tool : Gradle , Maven
   * Docker / 가상화 / K8S
   * https://www.coursera.org/ , YouTube 소개 / 책 추천 등...
   * 쿠버네티스(K8S)

3. 일단 개발자로 선택 했다.
  - "어떤 개발자가 되어야 하는가-어떤 개발 경험이 필요한가"
    * 코딩 테스트 : 백준 사이트
    * 직업 훈련 포털 : 코딩테스트 실력 UP 패키지 

4. 판단과 결정
  - "프로젝트를 해보는게 ...."
    * 음악과 관련된 서비스 / 프로젝트
    * 웹 / 백엔드 / 추천 엔진 기술 경험 프로젝트
  - 취업에 대한 고민도 함께
    * 채용과 관련 영상 추천
  - "경험도 중요하지만, 철학과 나만의 관점을 가지는 개발자..."
    * Requirements
    * Function(s)
    * Architecture(s)
    * Module(s)
    * Project
    * Agile

5. 프로젝트-포트폴리오
  - "프로젝트 진행"
    * 영화->음악 추천 앱/웹 서비스 기획 시작
    * 수집 API 분석
    * 요구사항 구체화 .....
  - "트랜드 지식은 계속..."
    * DevOps
    * Docker 
    * Python Flask
    * 머신러닝

6. Back to Basic 
  - 현재 어떤 상태인가? 진단과 재도약......
  - 역시 기본기가 탄탄해야 함....
  - "~~ 원하는 방향과 필요한 용기의 판단"
  - Now 
    : << 요구사항 정의에 대한 기본기 >>  