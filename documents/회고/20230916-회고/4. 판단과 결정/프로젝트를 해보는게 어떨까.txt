* 프로젝트  (왜 ? 무엇을?)
 - 소재 : Music -> 혼자 즐기는 ... -> 효과 / 이익 -> 공간을 채워 주는 .. 혼자 있어도... 
         -> 문제 / 잘못된 효과 -> 음악으로 관심이 쏠려서... 집중할거에.... 집중을 못하는...
    -> 언제/어디서 음악이 필요한가 ? 
    -> Feature : 하루종일.... / 다른 친구들도...(X) / 비슷한 성향..(적으면...) -> 인디(개발..) -> 고려
    -> 제목을 모를 경우... -> 플레이 리스트 만들어서... -> 추천.... -> High.
 - 예를 든 .... 페르소나 (유저 40대 후반의 어머니) : 시나리오

 - 장르(국가, .... 다른 분류) 음악을 추천 : 음악들의 일관성은 있음
 - 저작권이 없는 음악 예 : 언더 그라운드....
 - 저작권 : 앱을 아무나 만들어서.... 제공 가능할까? -> 한계 : 저작권이 있어도 추천 / 플레이는.. 못함.(분류)
 
 " 40대 후반 어머니가 음악 장르를 먼저 생각하게 된다. 이런 음악 듣고 싶어... 딸에게(지인에게) 얘기를 함...
  딸은 마침 바쁜 상황이어서, 급하게 톡으로 앱을 
 추천해 주었다. 어머니는 앱을 실행 하고, '단어를 입력' 하였다.. 앱은 사용자가 입력한 정보를 바탕으로 (+ -------------- )와 조합하여
 음악을 추천해 주었다... ---> 추천한 딸에게 어머니가 추천 받은 음악을 전송해 주었다... 딸이 관련된 플레이 리스트를 (다음날) 만들어서 추천해
 주었다 "

  - "장르를 입력/선택하면, 장르를 넘어선 음악을 추천해 주는 서비스/앱 (+ 저작권유무에 따라 플레이기능 (하루종일.... / 가이드 기능 : 너무 오래 듣는거 아닌가?))"
    |<----------->||<----------------------->|
         프런트(UI)              백엔드

  - 범위 : 사용자가 장르 치
 
 * 어떻게? (How to)
 - 웹은 아님 (UI) : 스타일 (PC웹 , 모바일웹, 앱 , 하이브리드앱 , 챗봇, SaaS ...)
 - 백엔드(API) : API 서비스( Java : Exposed ) + 추천 엔진 ( Python :Internal (API) ->  인공지능 / 분석 / 데이터 )
 - 추천 엔진 (Style : 옷 입는 스타일 / 시스템,서비스 스타일)
   (A) 실시간 추천 : 요청이 발생하면, -> 데이터 수집(외부/내부) -> 데이터를 정리 -> 추천 알고리즘에 실행 -> 결과를 응답
   (B) 적재(배치) 추천 : 미리 데이터를 (외부/내부) 수집 -> 미리 데이터를 정리해 놓음 // 요청이 발생하면 -> 데이터를 읽어와서 -> 추천 알고리즘을 실행 -> 응답
 - REST API 
   : Input  : country=???, age=??? , gender=??? , janlu=??? , request_time=??? , season=??? ...
     Output : 
           [
        {music_title=??? , music_singer=??? , right_yn=? , play_url=????},
            {music_title=??? , music_singer=??? , right_yn=? , play_url=????},
        {music_title=??? , music_singer=??? , right_yn=? , play_url=????},
        {music_title=??? , music_singer=??? , right_yn=? , play_url=????},
      ]
  - Java API Service (송수신 역할) <=> Python API Service (추천 데이터/서비스 역할)

 * 증명해봐....
 - 추천이 되긴 되는 거야?
   (A) 남들이 좋아하는 음악 추천 
   (B) 선호도를 선택 해 주면... cf) 핀터레스트
   (C) MBTI 입력하면.... 
   (D) 마음에 드는 영화를 바탕으로 ...... => 추출 데이터가 꽤 많음. 
       --> 다음시간 자료 수집 ( 공식적인 : 사이트, 게시판 글... ... , 비공식적 : 문서 ... )
       --> 어떻게 주기적 / 실시간 수집 방법을.... 

 
 " 개념에 대한... 정리 "
 - Requirement(s) : 요구사항 => 사용자가 가장 필요한 기능
 - Architecture , Module , Function , Class, Component, Service, ..........

