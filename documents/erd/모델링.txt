1. 설치
  - StarUML : https://staruml.io/download/
  - Visual Paradigm : https://www.visual-paradigm.com/download/community.jsp

2. 요구사항 모델링
  - 추천 알고리즘 요구사항 개요 흐름
    * 사용자 정보 입력
    * 영화 선택
    * 추천 알고리즘 실행 (컨텐츠 베이스 + 협업 필터링 방식 + 숨은 속성 발견 방식)
      - CF
        A(사람) : 쿠팡 50대 남자가 장바구니에 '고기(아이템)' + '석쇄(아이템)'
        B(사람) : 쿠팡 50대 다른 남자가 '고기' 선택하면 '석쇄'를 추천해줌.
      - CF 반대 방향
        공통된 아이템 (고기) 발견 --> 50대 남자가 들어오면 '고기' 추천
      - 숨은 속성(ML)
        텍스트 분석 : 영화에 대한 스토리 TEXT == 음악의 가사
        ---------------------------------------------------
        * 요구사항을 다루는 "유연함" 연습.. 필요
        - 논리를 기반으로 결정 하면. 효율적.
        * 규칙은  -> CF 와 ML 의사 결정에 사용될 예정 (추천 알고리즘)
        - CB 결과 + CF 결과 + ML  결과  = 점수화
        - CF 결과( CB 결과 , ML 결과) = 결론
        - 가중치 + 점수화 ... 
        - 가중치 
        --------------------------------------------------

    * 플레이 리스트 생성 
    * 음악 선택
    * 추천 알고리즘 업데이트(사용자 선택 정보 반영 -> 협업 필터링 방식)


  - Passive 알고리즘 (컨텐츠 베이스 <- 보완 필요)
  - 숨은 속성 발견 방식 (ML 사용)
    * 영화 정보와 음악정보간 연관성 분석 (텍스트 분석)
  - 추천 알고리즘 핵심 요구사항 
    * 컨텐츠 베이스 입력 방안
    * 협업 필터링 규칙 설계 방안
    * 숨은 속성 방식 설계 방안

##################################################################
※ 알고리즘의 역할과 범위
  - 필요한 알고리즘은 "사용자와 영화 정보를 통한 음악 추천 알고리즘"

※ 알고리즘 구성 방안
  - 3가지 모두 사용
    * 3가지의 의사 결정 비중과 합산 방식
  - 1가지 사용
  - 2가지 사용
    * 2가지의 의사 결정 비중과 합산 방식
##################################################################

분류를 하긴 했지만, "최선을 다함" -> 이런 방식이 이 분야에서 가장 많이 사용된다. 
가장 매력적인 기능/방식이라고 생각되는 부분?
 - 영화로 --> 음악 추천
 - 영화의 평점(추천 점수) <- Creator's 접근방법 선 정의
   : 보완(..........)
   : 점수를 통해서 추천을 비교 혹은 결정하겠다.
     예) A 라는 사람이 '가'라는 영화를 좋아한다 -> A라는 사람은 '1'이라는 노래에 추천 유사도 점수가 90점이다.
     예) 50대... 나이대 상관도...-> 영화를 통해서, 노래 추천에 영향을 줄 수 있도록
   : 많이 나타나는 유사도(나이가 -> 특정 영화를 선호 한다/평점이 높다) 
     -> 영화라는 정보에서 어떤 특징을 찾아내야 하는가? 
       (분위기 --> 장화홍련 --> 아련함. --> 추출...... ) : 예리함.

3. 컨텐츠 입력 방안
  - "나의 경험과 주변인들의 경험을 바탕으로 규칙을 정의 함"

  ※ 보완점
    - 적용할 수 있는 범위가 적고 신뢰도가 낮음
    - 규칙의 최신화를 적용할 수 있는 운영 방법(모니터링과 수정)이 필요함

  - 분위기 
   "장화홍련 영화를 선택 특징 : 공포, 배우... .. 항목(팩터) -> "분위기" : 아련함
   "아련함" -> 음악 검색 키워드 (ABCD) 


4. 협업 필터링 규칙 설계 방안 ( 참고 : https://kmhana.tistory.com/31 )
  - 사용자 or 영화 vs 아이템 정의
    * 협업 필터링에 사용할 "사용자" 분류
      : 분류 기준(연령, 성별, 국적, 직업, 취미, 관심분야... 등)
    * 협업 필터링에 사용할 "영화" 분류
      : 분류 기준(유형:드라마/액션/공포 등... , 감독, 배우, 제작년도... 등)
    * 협업 필터링에 사용할 "아이템" 분류
      : 분류 기준(장르, 아티스트, 엘범, 곡 등....)
  - 사용자 or 영화 vs 아이템의 유사도(관심?/거리?) 측정 방법
    * 사용자의 경험을 바탕으로 단순 통계를 사용하여 점수화 ( 참고 : https://moojuksublime.tistory.com/13 )
      : 사용자가 영화에 대한 과거 피드백을 관리하고 있는 정보, 사용자가 음악에 대한 과거 피드백을 관리하고 있는 정보를 사용함

  ※ 보완점
    - 사용할 수 있는 데이터 셋을 선별해서 적용
      : 캐글(www.kaggle.com) , (참고 : https://presentlife.tistory.com/entry/%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%EB%94%A5%EB%9F%AC%EB%8B%9D-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B6%84%EC%84%9D-%EB%AC%B4%EB%A3%8C%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%85%8B-%EC%82%AC%EC%9D%B4%ED%8A%B8)
      : Movie lens(https://movielens.org/) 
    - 정의된 사용자 or 영화 vs  아이템간의 유사도 결과가 좋았는지 나빴는지를 반영해 줘야 함.
    - 사용자의 피드백을 받을 수 있도록 하고, 피드백을 유사도 점수에 반영 할 수 있도록 해야 함.

  - 분위기 
   추출(도출) 방법 -> 리뷰에 겹치는 단어
   : 리뷰어가 리뷰 내용에 "분위기"를 나타내는 유사 단어를 사용했을 것이다. 
   : NLP(자연어 처리) -> 감성 분석 / 언어의 유사도 분석
   : 분위기를 대표하는 "단어"를 미리 분류해 놓는 작업 필요
     -> 점수 혹은 거리 개념
     -> 예를들면, "아련함" <- A라는 사람의 리뷰내용과의 "거리" 숫자

   "아련함" -> 음악 검색 키워드 (ABCD) 

  - 프로파일링(기본적인,분위기)
    : 결과 -> 단순 합산 , 가중 합산 , 평균 ..... , Log , 
    : 편향 되지 않도록 하기 위함.
    : 기본점수(50)-> 30가지, 분위기 점수(45)
      50 + elog45*1.2 : A 노래 <- 노래를 검색할 항목변수 배점 
      34 + 10*1.2 : B 노래
      28 + 32*1.2 : C 노래 
      59 + 50*1.2 : D 노래  <-- 추천
      90 + 12*1.2 : E 노래 
      78 + 16*1.2 : F 노래 
    : Activation 함수
      : Sin, Cos, Sigmoid, RELU........  
    : KNN, Word2Vector

5. 숨은 속성 방식 설계 방안
  - 새로운 가설을 통한 숨어 있는 속성들간의 유사도 혹은 숨어있는 알고리즘 적용
      * 데이터의 분석(Machine Learning)을 통한 점수화
      : KNN, Word2Vector , DNN(신경망 / ANN  )...--> RNN/CNN/......
  - 노래의 특징을 나열..... (발라드)
    : 영화의 특징간의 관계를 함수화 시킴.
    : 0.23245*장르 + 1.345345*나라 + .......... = 발라드점수 ( 신뢰도 : 87% )

  ※ 보완점
    - 알고리즘(모형)을 지속적으로 재학습해 줘야 함.(성능을 높이기 위해)


6. 최종 의사 결정 방안
  - 앙상블 : 합산한...

* PoC (Proof of Concept)
 - 개념의 증명
